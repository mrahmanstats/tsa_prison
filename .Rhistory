geom_line(size = 1) +
geom_point(size = 2.5, col = "white") +
geom_point(size = 2)
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2)
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018")
theme(plot.caption = element_text(hjust = 0, face= "italic")
ggplot(data = p, aes(x = date, y = prison_admissions)) +
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
acf(pris.ts)
pris.ts
acf(pris.ts, 12)
acf(p$prison_admissions)
acf(p$prison_admissions, 132)
acf(pris.ts, 132)
acf(p$prison_admissions, 132)
autoplot(acf(p$prison_admissions, 132))
library(forecast)
ggacf(p$prison_admissions, 132)
ggAcf(p$prison_admissions, 132)
ggAcf(p$prison_admissions, 132) + labels(title = "Prison Admissions ACF")
ggAcf(p$prison_admissions, 132) + ggtitle(label = "Prison Admissions ACF")
pris.acf <- ggAcf(p$prison_admissions, 132) + ggtitle(label = "Prison Admissions ACF")
pris.pacf <- ggPacf(p$prison_admissions, 132) + ggtitle(label = "Prison Admissions PACF")
fig2 <- gridExtra::grid.arrange(pris.acf, pris.pacf)
fig2 + labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the original data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
pris.acf <- ggAcf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions ACF")
pris.pacf <- ggPacf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the original data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
fig2 <- gridExtra::grid.arrange(pris.acf, pris.pacf)
fig2
pris.acf <- ggAcf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions ACF")
pris.pacf <- ggPacf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the original data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(pris.acf, pris.pacf)
pris.acf <- ggAcf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions ACF")
pris.pacf <- ggPacf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the original data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(pris.acf, pris.pacf)
pris.acf <- ggAcf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions ACF")
pris.pacf <- ggPacf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the original data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(pris.acf, pris.pacf)
pris.acf <- ggAcf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions ACF")
pris.pacf <- ggPacf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the original data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(pris.acf, pris.pacf)
pris.acf <- ggAcf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions ACF")
pris.pacf <- ggPacf(p$prison_admissions, 132) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the original data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(pris.acf, pris.pacf)
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
geom_abline() +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
geom_smooth() +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
geom_smooth(se = F, method = "lm") +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
geom_smooth(se = F, method = "lm", col = 'seagreen4') +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
geom_smooth(se = F, method = "lm", col = 'seagreen3') +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
geom_smooth(se = F, method = "lm", col = 'seagreen3', size = 2) +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = p, aes(x = date, y = prison_admissions)) +
geom_line(size = 1) +
geom_point(size = 3, col = "white") +
geom_point(size = 2) +
geom_smooth(se = F, method = "lm", col = 'seagreen3', size = 2) +
labs(caption = "Figure 3. Fitted Linear Regression Line on Prison Admission Time Series") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
a <- lm(data = p, pris_admissions ~ date)
a <- lm(data = p, prison_admissions ~ date)
gtsummary::tbl_regression(a)
gtsummary::tbl_regression(a, label = list('date' ~ "Date"))
library(sjPlot)
tab_model(a)
prison
head(prison)
d <- prison %>% select(date, V1, Admission.Month) %>% rename("prison_admissions" = V1, "month" = Admission.Month)
box_sum <- d %>% group_by(month) %>% summarise("total_prison_admissions" = sum(prison_admissions))
ggplot(data = box_sum, aes(y = total_prison_admissions, x = month)) + geom_boxplot()
ggplot(data = d, aes(y = total_prison_admissions, x = month)) + geom_boxplot()
ggplot(data = d, aes(y = prison_admissions, x = month)) + geom_boxplot()
ggplot(data = d, aes(y = prison_admissions, x = factor(month))) + geom_boxplot()
str(d)
d$month <- factor(d$month)
ggplot(data = d, aes(y = prison_admissions, x = factor(month))) + geom_boxplot()
levels(d$month)
d
d$month[1:12]
as.character(d$month[1:12])
d <- prison %>% select(date, V1, Admission.Month) %>% rename("prison_admissions" = V1, "month" = Admission.Month)
d$month <- factor(d$month, levels = d$month[1:12])
ggplot(data = d, aes(y = prison_admissions, x = factor(month))) + geom_boxplot()
ggplot(data = d, aes(y = prison_admissions, x = month)) + geom_boxplot()
d$month <- factor(d$month, levels = d$month[1:12])
ggplot(data = d, aes(y = prison_admissions, x = month)) +
geom_boxplot() +
labs(x = "Month",
y = "Prison Admissions",
title = "Monthly NYS Prison Admissions",
caption = "Figure 4. Boxplot of Monthly Prison Admissions from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
d$month <- factor(d$month, levels = d$month[1:12])
ggplot(data = d, aes(y = prison_admissions, x = month)) +
geom_boxplot() +
labs(x = "Month",
y = "Prison Admissions",
title = "Monthly NYS Prison Admissions",
caption = "Figure 4. Boxplot of Monthly Prison Admissions from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = d, aes(y = prison_admissions, x = month)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot() +
labs(x = "Month",
y = "Prison Admissions",
title = "Monthly NYS Prison Admissions",
caption = "Figure 4. Boxplot of Monthly Prison Admissions from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = d, aes(y = prison_admissions, x = month)) +
stat_boxplot(geom ='errorbar', col = "black") +
geom_boxplot() +
labs(x = "Month",
y = "Prison Admissions",
title = "Monthly NYS Prison Admissions",
caption = "Figure 4. Boxplot of Monthly Prison Admissions from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = d, aes(y = prison_admissions, x = month)) +
stat_boxplot(geom ='errorbar', col = "black", notchwidth= 0.3) +
geom_boxplot() +
labs(x = "Month",
y = "Prison Admissions",
title = "Monthly NYS Prison Admissions",
caption = "Figure 4. Boxplot of Monthly Prison Admissions from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
ggplot(data = d, aes(y = prison_admissions, x = month)) +
stat_boxplot(geom ='errorbar', col = "black", width= 0.3) +
geom_boxplot() +
labs(x = "Month",
y = "Prison Admissions",
title = "Monthly NYS Prison Admissions",
caption = "Figure 4. Boxplot of Monthly Prison Admissions from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
pris.ts
pris.ts[,1]
pris.ts[1]
pris.ts[2]
pris.ts <- ts(p$prison_admissions, start = c(2008,1), frequency = 12)
diff_1 <- diff(pris.ts, 12)
diff_2 <- diff(diff_1, 1)
adf.test(diff_2)
data.frame(diff_2)
autoplot(diff_2)
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018. The data was transformed by a seasonal difference with lag 12 and a non-seasonal difference of lag 1") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(diff_2) +
labs(y = "Lagged Prison Admissions",
title = "Lagged Prison Admissions",
caption = "Figure 5. A stationary time series plot is shown above reflecting the number of prison admissions spanning from 2008 – 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
diff.acf <- ggAcf(diff_2, 120) +
ggtitle(label = "Prison Admissions ACF")
diff.pacf <- ggPacf(diff_2, 120) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the differenced data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(diff.acf, diff.pacf)
diff.acf <- ggAcf(diff_2, 120) +
ggtitle(label = "Prison Admissions ACF")
diff.pacf <- ggPacf(diff_2, 120) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the differenced data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(diff.acf, diff.pacf)
diff.acf <- ggAcf(diff_2, 120) +
ggtitle(label = "Prison Admissions ACF")
diff.pacf <- ggPacf(diff_2, 120) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the differenced data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(diff.acf, diff.pacf)
diff.acf <- ggAcf(diff_2, 120) +
ggtitle(label = "Prison Admissions ACF")
diff.pacf <- ggPacf(diff_2, 120) +
ggtitle(label = "Prison Admissions PACF") +
labs(caption = "Figure 2. ACF (Upper) and PACF (Lower) plots of the differenced data are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(diff.acf, diff.pacf)
model_fit_df <- data.frame("(p,d,q)(P,D,Q)" = "AIC",
"(1,1,1)(2,1,1)" = 1341.52,
"(2,1,1)(2,1,1)" = 1339.32,
"(2,1,2)(2,1,1)" = 1339.02,
"(2,1,3)(2,1,1)" = 1342.53,
"(2,1,3)(2,1,3)" = 1335.36)
gt(model_fit_df)
model_fit_df <- tibble("(p,d,q)(P,D,Q)" = "AIC",
"(1,1,1)(2,1,1)" = 1341.52,
"(2,1,1)(2,1,1)" = 1339.32,
"(2,1,2)(2,1,1)" = 1339.02,
"(2,1,3)(2,1,1)" = 1342.53,
"(2,1,3)(2,1,3)" = 1335.36)
gt(model_fit_df)
kable(model_fit_df)
arima.fit <- arima(pris.ts,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
tsdiag(arima.fit)
autoplot(arima.fit)
autoplot(arima.fit$residuals)
autoplot(arima.fit$residuals) +
labs(y = "Residuals")
length(arima.fit$residuals)
res.acf <- ggAcf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals ACF")
res.pacf <- ggPacf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals PACF") +
labs(caption = "Figure 6. ACF (Upper) and PACF (Lower) plots of the Final Arima Model Residuals are shown above. 95 percent confidence intervals are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(res.acf, res.pacf)
res.acf <- ggAcf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals ACF")
res.pacf <- ggPacf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals PACF") +
labs(caption = "Figure 6. ACF (Upper) and PACF (Lower) plots of the Final Arima Model Residuals are shown above. 95 percent CI are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(res.acf, res.pacf)
res.acf <- ggAcf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals ACF")
res.pacf <- ggPacf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals PACF") +
labs(caption = "Figure 6. ACF (Upper) and PACF (Lower) plots of the Final Arima Model Residuals are shown above. 95 percent CI are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(res.acf, res.pacf)
res.acf <- ggAcf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals ACF")
res.pacf <- ggPacf(arima.fit$residuals, 132) +
ggtitle(label = "Arima Residuals PACF") +
labs(caption = "Figure 6. ACF (Upper) and PACF (Lower) plots of the Final Arima Model Residuals are shown above. 95 percent CI are represented by the blue dashed lines.")  +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
gridExtra::grid.arrange(res.acf, res.pacf)
ggplot(aes(y = arima.fit$residuals)) + geom_histogram()
ggplot(aes(x = arima.fit$residuals)) + geom_histogram()
arima.fit$residuals
ggplot(aes(x = numeric(arima.fit$residuals))) + geom_histogram()
arima.fit$residuals
res <- arima.fit$residuals
res <- data.frame(arima.fit$residuals)
res <- data.frame(arima.fit$residuals)[,1]
res <- data.frame(arima.fit$residuals)
red <- res$arima.fit.residuals
res <- res$arima.fit.residuals
rm(red)
ggplot(aes(x = res)) + geom_histogram()
res <- data.frame(arima.fit$residuals)
ggplot(res, aes(x = arima.fit.residuals)) + geom_histogram()
ggplot(res, aes(x = arima.fit.residuals)) +
geom_histogram(col = "white")
res <- data.frame(arima.fit$residuals)
ggplot(res, aes(x = arima.fit.residuals)) +
geom_histogram(col = "white") +
labs(x = "Arima Fitted Residuals",
y = "Count",
caption = "Figure 8. Histogram of the residuals outputted from the final model")
res <- data.frame(arima.fit$residuals)
ggplot(res, aes(x = arima.fit.residuals)) +
geom_histogram(col = "white") +
labs(x = "Arima Fitted Residuals",
y = "Count",
caption = "Figure 8. Histogram of the residuals outputted from the final model")
autoplot(arima.fit$residuals, size = 1) +
labs(y = "Residuals",
caption = "Figure 6. Time Series plot of Arima Fitted Residuals",
Title = "Fitted Residuals Time Series") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
arima.fit <- arima(pris.ts,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
autoplot(arima.fit$residuals, size = 1) +
labs(y = "Residuals",
caption = "Figure 6. Time Series plot of Arima Fitted Residuals",
Title = "Fitted Residuals Time Series") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
length(pris.ts)
pris.ts[1:122]
train <- pris.ts[1:122]
test <- pris.ts[123:132]
fc.fit <- arima(train,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
forecast(fc.fit, h = 10)
forecast(x = train, model = fc.fit, h = 10)
forecast(object = train, model = fc.fit, h = 10)
forecast(fc.fit, h=12)
fc.pred <- predict(fc.fit, test)
fc.pred
fc.pred$pred
fc_pred <- data.frame("pred" = fc.pred$pred[1:10], "se" = fc.pred$se[1:10])
random <- data.frame("pred" = rep(NA, 122), "se" = rep(NA, 122))
fc_pred <- rbind(random, fc_pred)
p_2 <- cbind(p, fc_pred)
ggplot(data = p_2, aes(x = date)) +
geom_line(aes(y = prison_admissions), size = 1) +
geom_point(aes(y = prison_admissions), size = 3, col = "white") +
geom_point(aes(y = prison_admissions), size = 2) +
labs(x = "Date",
y = "Prison Admissions",
caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
p_2 %>% head()
ggplot(data = p_2, aes(x = date)) +
geom_line(aes(y = prison_admissions), size = 1) +
geom_point(aes(y = prison_admissions), size = 3, col = "white") +
geom_point(aes(y = prison_admissions), size = 2) +
geom_line(aes(y = pred)) +
labs(x = "Date",
y = "Prison Admissions",
caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
random <- data.frame("pred" = rep(NA, 132), "se" = rep(NA, 132))
fc_pred <- rbind(random, fc_pred)
p_2 <- cbind(p, fc_pred)
ggplot(data = p_2, aes(x = date)) +
geom_line(aes(y = prison_admissions), size = 1) +
geom_point(aes(y = prison_admissions), size = 3, col = "white") +
geom_point(aes(y = prison_admissions), size = 2) +
geom_line(aes(y = pred)) +
labs(x = "Date",
y = "Prison Admissions",
caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
fc_pred <- data.frame("pred" = fc.pred$pred[1:10], "se" = fc.pred$se[1:10])
random <- data.frame("pred" = rep(NA, 132), "se" = rep(NA, 132))
fc_pred <- rbind(random, fc_pred)
p_2 <- cbind(p, fc_pred)
p
random <- data.frame("date" = rep(NA, 10), "prison_admissions" = rep(NA,10))
p_2 <- rbind(p, random)
p_3 <- cbind(p_2, fc_pred)
ggplot(data = p_3, aes(x = date)) +
geom_line(aes(y = prison_admissions), size = 1) +
geom_point(aes(y = prison_admissions), size = 3, col = "white") +
geom_point(aes(y = prison_admissions), size = 2) +
geom_line(aes(y = pred)) +
labs(x = "Date",
y = "Prison Admissions",
caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
fc.fit <- TSA::arima(train,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
forecast(fc.fit, h=10)
fc.fit <- stats::arima(train,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
forecast(fc.fit, h=10)
autoplot(forecast(fc.fit, h=10))
fc <- hw(fc.fit, h=10)
fc <- forecast(fc.fit, h=10)
fc
train
train <- ts(pris.ts[1:122], frequency = 12, start = c(2008, 1))
fc <- forecast(fc.fit, h=10)
train <- ts(pris.ts[1:122], start = c(2008, 1))
fc.fit <- stats::arima(train,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
fc <- forecast(fc.fit, h=10)
autoplot(fc)
train
train <- ts(pris.ts[1:122], start = c(2008, 1), frequency = 12)
fc.fit <- stats::arima(train,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
fc <- forecast(fc.fit, h=10)
autoplot(fc)
autoplot(fc) + xlim(2008, 2019)
autoplot(fc) + scale_x_continuous(breaks = c(2008, 2010, 2012, 2014, 2016, 2018, 2020))
autoplot(fc) + scale_x_continuous(breaks = 2018:2019)
autoplot(forecast(fc.fit, h=10), color = "seagreen3") +
labs(y="Prison Admissions",
captions = ""
)
autoplot(fc, col = "seagreen3") + scale_x_continuous(breaks = 2018:2019)
fc <- forecast(fc.fit, h=10, col = "seagreen3")
autoplot(fc) + scale_x_continuous(breaks = 2018:2019) + scale_color_manual(values = "seagreen4")
autoplot(fc) + scale_x_continuous(breaks = 2018:2019) +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(fc) + scale_x_continuous(breaks = 2018:2019) +
labs(x = "Date",
y = "Prison Admissions",
caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(fc) + scale_x_continuous(breaks = 2018:2019) +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
autoplot(fc) +
labs(caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic")) +
scale_x_continuous(breaks = 2018:2019)
autoplot(fc) + scale_x_continuous(breaks = 2018:2019)
autoplot(fc) + scale_x_continuous(breaks = 2018:2019)
autoplot(fc) + scale_x_continuous(breaks = 2008:2019)
autoplot(fc) + scale_x_continuous(breaks = 2008:2019) +
labs(x = "Date",
y = "Prison Admissions",
caption = "Figure 1. Time series line plot of the number of prison admissions monthly from 2008 to 2018") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
train <- ts(pris.ts[1:122], start = c(2008, 1), frequency = 12)
test <- pris.ts[123:132]
fc.fit <- stats::arima(train,
order = c(2,1,3),
seasonal = list(order = c(2,1,3)))
fc <- forecast(fc.fit, h=10)
autoplot(fc) + scale_x_continuous(breaks = 2008:2019) +
labs(x = "Date",
y = "Prison Admissions",
title = "Prison Admissions Forecast",
caption = "Figure 9. Forecasted prison admissions time series") +
theme(plot.caption = element_text(hjust = 0, face= "italic"))
